scalar JSON

"""
Marcas
"""
enum MarcaType {
  FIAT
  GM
  CHEVROLET
  VOLKSWAGEN
  FORD
  RENAULT
  HYUNDAI
  TOYOTA
  HONDA
  NISSAN
  CITROEN
  MITSUBISHI
  PEUGEOT
  SUZUKI
}

"""
Combustível
"""
enum CombustivelType {
  FLEX
  ALCOOL
  GASOLINA
  DIESEL
  ELETRICO
  GNV
  TRIFUEL
  HIBRIDO
}

"""
Helper Paginação
"""
enum ResultType {
  VEICULO
}

"""
Itens que podem aparecer no resultado da busca.
"""
union ResultItem = Veiculo

type SearchResultItem {
  results: [ResultItem]
  next: String
  hasNext: Boolean!
  hasPrevious: Boolean!
  previous: String
}

interface Node {
  _id: ID!
}

type Veiculo implements Node {
  _id: ID!
  marca: MarcaType
  modelo: String
  ano_fabricacao: Int
  ano_modelo: Int
  combustivel: CombustivelType
  cor: String
  vendido: Boolean
  descricao: String
  created: Float
  modified: Float
}

input VeiculoInput {
  marca: MarcaType
  modelo: String
  ano_fabricacao: Int
  ano_modelo: Int
  combustivel: CombustivelType
  cor: String
  vendido: Boolean
  descricao: String
}

type Mutation {
  save(
    data: VeiculoInput!
    id: ID
  ): ID
  rm(id: ID!): ID
}

type Query {
  details(id: ID!): Veiculo
  search(
    previous: String,
    next: String,
    query: JSON,
    limit: Int = 10,
    type: ResultType!
  ): SearchResultItem
}

schema {
  query: Query
  mutation: Mutation
}
